%% ----------------------------------------------------------
%%    Answers to Questions of Part II, Assignment 1

%% Instructions: 

%% Please edit this file in the following way to answer the text
%% questions of Assignment 1. 

%% - Please enter your name and student number in the space provided.

%% - Please replace any occurrence of '[yes/no]' with either 'yes' or
%% 'no' to answer the respective question.

%% - Where applicable, replace any occurrence of '[explain in less than N words]' 
%%   with an explanation containing no more than N words. 
 
%% - Do not remove any other lines.

%% - Any line starting with a '%' will be ignored.

%% - Submit this file electronically.

%% ----------------------------------------------------------

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%  CSC384 Winter 2014, Assignment 1
%%
%%  NAME:Vincent Lee
%%
%%  STUDENT NUMBER:997454419
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



/* ------------------------------------------------------ */
<Question 4>
%% [Heuristics I]
%% Explain in a few sentences how your heuristic works.

My heuristic combines Manhattan distance and Euclidian distance together, 
and subtract the number of sucessors to reward a frontier with more 
possible routes. 


/* ------------------------------------------------------ */
<Question 5>
%% [Heuristics II]
%% Which of the four heuristics are admissible?
<5. 1 Null>
yes


<5.2 Manhattan>
yes


<5.3 Rounded Euclidean>
yes


<5.4  Your Heuristic>
no

%% For any which is not admissible give a counter example.
<5.5 Counter examples>
Consider the following segment of a maze,

XXXXXX
XG---X
X----X
X--X-X
X--X*X
XXXXXX

Manhattan Heuristic would give an estimate of 7
Euclidian Heuristic would give an estimate of 5
Number of available paths of the frontier is 2

5 + 7 -2  = 10 < 7
The resulted estimate is greater than the actual cost. 


/* ------------------------------------------------------ */
<Question 6>
%% [Heuristics III]
%% Suppose we modify the cost function so that moving to the left 
%% now costs 0.5, and all other moves still cost 1.
%% Which of the heuristics are admissible now? 
<6.1 Null>
yes


<6.2 Manhattan>
no


<6.3 Rounded Euclidean>
no


<6.4 Your Heuristic>
no

%% For any which is not admissible, give a counter example.
%% (To save space, you may refer to counter examples from a previous 
%% question if applicable.)
<6.5 Counter examples>
Consider the following segment of a maze. 

XXXXXX
G-***
XXXXXX

Both Euclidian and Manhattan heuristics will give an estimate of 1 instead 
of 0.5 which costs less than the heuristic estimation.

For my heuristic, please refer to the previous question.

/* ------------------------------------------------------ */
<Question 7>
%% [Heuristics IV]
%% For the original problem, imagine the robot would also be able to move
%% diagonally (with the same cost 1). Which of the four heuristics will
%% be admissible for this new problem?  
<7.1 Null>
yes


<7.2 Manhattan>
no


<7.3 Rounded Euclidean>
yes


<7.4 Your Heuristic>
no

%% For any which is not admissible, give a counter example.
%% (To save space, you may refer to counter examples from a previous
%% question if applicable.)
<7.5 Counter examples>
For Manhattan, consider the following segment of a mazw.

XXXXXXX
XG----
X-*

Manhattan heuristic would overestimate the moves required. 

For my heuristic, it will not be admissible because one of it's compnent, 
Manhattan heuristic is no admissible.


/* ------------------------------------------------------ */
<Question 8>
%% [Performance]
%% Run your implementation on each of the 3 given mazes and 3
%%  provided search routines (use go/2, goCC/2, goIDA/2). 
%%  For each of the 9 maze/search routine combinations use each of 
%%  the 4 heuristics (i.e.,~totalling 36 runs). Note that not all problems 
%%  may be solvable with all heuristics with the node limit set in the algorithms. 
%%  The node limit is 10,000 for the astar/astarcC searches 
%%  and 30,000 for  the idastar search.
%%  Then, fill in the table below that compares the numbers of nodes expanded by
%%  each of the provided search algorithms for all four heuristics.
%%  If a search does not terminate within the given node limit, 
%%  indicate it with ">limit" in the table

<8.1 Table>

         |             | # nodes   | # nodes    | # nodes  |
   Maze  | Heuristic   | for A*    |  for A*-CC | for IDA* |
   ------+-------------+-----------+------------+----------+
   maze1 | Null        | 6808      | 62         | >limit   |
   ------+-------------+-----------+------------+----------+
   maze1 | Manhattan   | 2283      | 50         | 4355     |
   ------+-------------+-----------+------------+----------+
   maze1 | Euclidian   | 2566      | 56         | 8729     | 
   ------+-------------+-----------+------------+----------+ 
   maze1 | MyHeuristic | 1430      | 50         | 3939     | 
   ------+-------------+-----------+------------+----------+
   maze2 | Null        | >limit    | 71         | >limit   |
   ------+-------------+-----------+------------+----------+
   maze2 | Manhattan   | 23        | 20         | 80       |
   ------+-------------+-----------+------------+----------+
   maze2 | Euclidian   | 2484      | 63         | 2818     | 
   ------+-------------+-----------+------------+----------+
   maze2 | MyHeuristic | 17        | 17         | 28       | 
   ------+-------------+-----------+------------+----------+
   maze3 | Null        | >limit    | 57         | >limit   |
   ------+-------------+-----------+------------+----------+
   maze3 | Manhattan   | 1973      | 46	        | 5160     |
   ------+-------------+-----------+------------+----------+
   maze3 | Euclidian   | >limit	   | 46         | 29163    | 
   ------+-------------+-----------+------------+----------+
   maze3 | MyHeuristic | 1753      | 45         | 6724     | 
   ------+-------------+-----------+------------+----------+


  
% Now, based on the results in the above table, draw your conclusions about the
% quality of the heuristics and the search routines.
<8.2 Conclusions>
A*-CC seems to be the best search algorithm for finding solutions to small 
mazes in this setting.

Based on the results of A*-CC, it seems that myHeuristic is the best 
heuristic for solving small mazes. However, the solution may not be optimal .

Otherwise, Manhattan distance would be the best heuristic to look for 
optimal solution for a small maze. 


/* ------------------------------------------------------ */
<Question 9>
%% [State Representation]
%% Imagine a variant of the maze problem where 
%% the player initially has a number of JumpOnObstacle pills.
%% The player can move on top of an obstacle position if he still has
%% at least one of these pills available (in effect this work as if 
%% there was no obstacle there).
%% Note that moving on top of an obstacle will consume one pill.
%% How would you minimally represent the states for this problem and what 
%% changes to the successors predicate will you need to make?
%% Do not write any code, briefly explain in English.
<9>
We will need a counter to keep track of the number of pills, so that the 
number of pills can be incremented when the search backtracks. 

The successors predicate will need to check if the player has more than 0
pills, the user can choose to ignore all obsticles and climb on it. 




